DO $$ BEGIN
 CREATE TYPE "public"."vehicle_crew" AS ENUM('GRUPPE', 'STAFFEL', 'TRUPP', 'MTW');
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-account" (
	"user_id" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "alarm-account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-alarms" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"keyword" varchar(16) NOT NULL,
	"units" varchar(1024) NOT NULL,
	"date" timestamp DEFAULT now(),
	"gone" boolean,
	"vehicle" varchar(255),
	"seat" integer,
	"address" varchar(255),
	"createdAt" timestamp DEFAULT now() NOT NULL,
	"updatedAt" timestamp DEFAULT now()
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"email_verified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255),
	"wehr_name" varchar(255),
	"show_email" boolean DEFAULT true
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-vehicles" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" varchar(255) NOT NULL,
	"name" varchar(255) NOT NULL,
	"call_sign" varchar(255) NOT NULL,
	"crew" "vehicle_crew",
	"staffel_bench_seats" boolean
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "alarm-verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
CREATE TABLE IF NOT EXISTS "alarm-webhooks" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "alarm-webhooks_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"user_id" varchar(255) NOT NULL,
	"token" varchar NOT NULL,
	"name" varchar(255) NOT NULL,
	"createdAt" timestamp DEFAULT now() NOT NULL,
	"updatedAt" timestamp DEFAULT now()
);
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "alarm-account" ADD CONSTRAINT "alarm-account_user_id_alarm-user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."alarm-user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "alarm-alarms" ADD CONSTRAINT "alarm-alarms_user_id_alarm-user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."alarm-user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "alarm-alarms" ADD CONSTRAINT "alarm-alarms_vehicle_alarm-vehicles_id_fk" FOREIGN KEY ("vehicle") REFERENCES "public"."alarm-vehicles"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "alarm-session" ADD CONSTRAINT "alarm-session_user_id_alarm-user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."alarm-user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "alarm-vehicles" ADD CONSTRAINT "alarm-vehicles_user_id_alarm-user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."alarm-user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
DO $$ BEGIN
 ALTER TABLE "alarm-webhooks" ADD CONSTRAINT "alarm-webhooks_user_id_alarm-user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."alarm-user"("id") ON DELETE no action ON UPDATE no action;
EXCEPTION
 WHEN duplicate_object THEN null;
END $$;
--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "account_user_id_idx" ON "alarm-account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "session_user_id_idx" ON "alarm-session" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX IF NOT EXISTS "token_index" ON "alarm-webhooks" USING btree ("token");